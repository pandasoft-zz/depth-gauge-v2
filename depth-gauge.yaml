esphome:
  name: depth_gauge
  platform: ESP32
  board: esp32dev
  on_boot:
    priority: -10
    then:
      #- switch.turn_off: display_on
      - lambda: |-
          id(my_display).turnOff();

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: " Init Hotspot"
    ap_timeout: 20s
    password: !secret wifi_ap_pass

captive_portal:

web_server:
  port: 80
  auth:
      username: admin
      password: !secret web_server_password
      
# Enable logging
logger:

ota:
  password: !secret ota_pass

sensor:
  - platform: ultrasonic
    trigger_pin: GPIO5
    echo_pin: GPIO4
    name: "Depth"
    id: "depth"
    timeout: 8.0m
    filters:
      - median:
          window_size: 5
          send_every: 5
          send_first_at: 1
    unit_of_measurement: "cm"
    update_interval: 10s
  - platform: dht
    model: "DHT11"
    pin: GPIO27
    temperature:
      name: "Internal temp"
      id: "inner_temp"
    humidity:
      name: "Internal Humidity"
      id: "inner_humidity"
    update_interval: 60s

binary_sensor:
  - platform: gpio
    pin: GPIO34
    name: "PIR Sensor"
    id: "motion"
    filters: 
      - delayed_on: 100ms
      - delayed_off: 10s
    on_press:
      then:
        - logger.log: "Detekce On"
        #- switch.turn_on: display_on
        - lambda: |-
            id(my_display).turnOn();
    on_release:
      then:
        - logger.log: "Detekce off"
        #- switch.turn_off: display_on
        - lambda: |-
            id(my_display).turnOff();
#switch:
#  - platform: template
#    name: "Display"
#    id: "display_on"
#    on_turn_on: 
#      - logger.log: "Display zapnuto"
#      - lambda: |-
#          id(my_display).turnOn();
#    on_turn_off: 
#      - logger.log: "Display vypnuto"
#      - lambda: |-
#          id(my_display).turnOff();
i2c:
  sda: GPIO21
  scl: GPIO22

font:
  - file: 'Roboto-Regular.ttf'
    id: header_font
    size: 15
  - file: 'Roboto-Regular.ttf'
    id: base_font
    size: 40

display:
  - platform: ssd1306_ext
    model: "SSD1306 128x64"
    address: 0x3C
    id: my_display
    pages:
      - id: p_inner_temp
        lambda: |-
          it.print(0, 1, id(header_font), "Teplota"); 
          it.line(0, 17, 128, 17);
          it.printf(5, 45, id(base_font), "%.1f Â°C", id(inner_temp).state);
      - id: p_inner_humidity
        lambda: |-
          it.print(0, 1, id(header_font), "Vlhkost"); 
          it.line(0, 17, 128, 17);
          it.printf(5, 45, id(base_font), "%.1f %%", id(inner_humidity).state);
      - id: p_depth
        lambda: |-
          it.print(0, 1, id(header_font), "Hloubka"); 
          it.line(0, 17, 128, 17);
          it.printf(5, 45, id(base_font), "%.1f m", id(depth).state);
  
interval:
  - interval: 5s
    then:
      - display.page.show_next: my_display
      - component.update: my_display

